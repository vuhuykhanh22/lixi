{"version":3,"sources":["Images sync /^/happy/-.*/.gif$","Images/happy-1.gif","Images/happy-2.gif","Images/happy-3.gif","Images/happy-4.gif","Component/Envelope.js","App.js","serviceWorker.js","index.js","Images/firework.gif"],"names":["map","./happy-1.gif","./happy-2.gif","./happy-3.gif","./happy-4.gif","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Envelope","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","price","show","gallery","open","window","setTimeout","location","reload","imageArray","random","Math","floor","length","priceArray","rand","setState","reloadPage","_this2","react_default","a","createElement","className","onClick","randomPrice","Modal","Dialog","Body","Image","src","require","height","alt","Footer","Button","bsStyle","handleClose","Component","App","BrowserRouter","Envelope_Envelope","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAA,IAAAA,EAAA,CACAC,gBAAA,IACAC,gBAAA,IACAC,gBAAA,IACAC,gBAAA,KAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAP,EAAAM,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAb,IAEAK,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,yBC1BAS,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oNCEnBC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAS,KAAAJ,IACfE,EAAAP,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAAK,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,CACTC,MAAO,GACPC,MAAM,EACNC,QAAS,GACTC,MAAM,GANKV,4EAUfW,OAAOC,WAAW,WAAWD,OAAOE,SAASC,UAAW,2CAGxD,IAAMC,EAAa,CAAC,IAAK,IAAK,KACxBC,EAASD,EAAWE,KAAKC,MAAMD,KAAKD,SAAWD,EAAWI,SAC1DC,EAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC3HC,EAAOD,EAAWH,KAAKC,MAAMD,KAAKD,SAAWI,EAAWD,SAE9DjB,KAAKoB,SAAS,CACVf,MAAOc,EACPb,MAAM,EACNC,QAASO,EACTN,MAAM,0CAMVR,KAAKoB,SAAS,CAAEd,MAAM,IACtBN,KAAKqB,kDAILrB,KAAKoB,SAAS,CAAEd,MAAM,qCAGjB,IAAAgB,EAAAtB,KACL,OACKuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBC,QAAS,kBAAML,EAAKM,gBACrDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAWH,EAAAC,EAAAC,cAAA,YAAOzB,KAAKI,MAAMC,SAE/CL,KAAKI,MAAME,KACRiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACI,EAAA,EAAMC,OAAP,KACIP,EAAAC,EAAAC,cAACI,EAAA,EAAME,KAAP,CAAYL,UAAU,eAClBH,EAAAC,EAAAC,cAAA,gFAA+BzB,KAAKI,MAAMC,MAA1C,4BACAkB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,IAAKC,OAAQ,WAAqBlC,KAAKI,MAAMG,QAAU,QAAS4B,OAAQ,IAAKC,IAAI,eAE5Fb,EAAAC,EAAAC,cAACI,EAAA,EAAMQ,OAAP,KACId,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQZ,UAAU,eAAea,QAAQ,SAASZ,QAAS,kBAAML,EAAKkB,gBAAtE,mBAIV,aAvDgBC,aCwCvBC,mLA/BX,OACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACApB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,IAAKC,EAAQ,IAA2BR,UAAU,aACzDH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,IAAKC,EAAQ,IAA2BR,UAAU,oBAEvDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACZH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,2CAEHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,kBAxBQH,aCIEI,QACW,cAA7BpC,OAAOE,SAASmC,UAEe,UAA7BrC,OAAOE,SAASmC,UAEhBrC,OAAOE,SAASmC,SAASC,MACvB,2DCZNC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBjE,EAAAC,QAAiBR,EAAAS,EAAuB","file":"static/js/main.9702d478.chunk.js","sourcesContent":["var map = {\n\t\"./happy-1.gif\": 137,\n\t\"./happy-2.gif\": 138,\n\t\"./happy-3.gif\": 139,\n\t\"./happy-4.gif\": 140\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 136;","module.exports = __webpack_public_path__ + \"static/media/happy-1.331d8457.gif\";","module.exports = __webpack_public_path__ + \"static/media/happy-2.7c5dccae.gif\";","module.exports = __webpack_public_path__ + \"static/media/happy-3.a907eab5.gif\";","module.exports = __webpack_public_path__ + \"static/media/happy-4.aaf542d0.gif\";","import React, { Component } from 'react'\r\nimport { Modal, Button, Image } from 'react-bootstrap'\r\nexport default class Envelope extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            price: '',\r\n            show: false,\r\n            gallery: '',\r\n            open: false\r\n        }\r\n    }\r\n    reloadPage() {\r\n        window.setTimeout(function(){window.location.reload()}, 300);\r\n    }\r\n    randomPrice() {\r\n        const imageArray = ['1', '2', '3'];\r\n        const random = imageArray[Math.floor(Math.random() * imageArray.length)];\r\n        const priceArray = ['30k', '30k', '50k', '30k', '70k', '70k', '50k','100k','50k','30k','50k','30k','30k','70k','30k','50k','30k','30k'];\r\n        const rand = priceArray[Math.floor(Math.random() * priceArray.length)];\r\n\r\n        this.setState({\r\n            price: rand,\r\n            show: true,\r\n            gallery: random,\r\n            open: true\r\n\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false});\r\n        this.reloadPage();\r\n    }\r\n\r\n    handleShow() {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <div className='col-6 col-sm-3 mb-4 mobile'>\r\n                <div className='ui-envelope rounded' onClick={() => this.randomPrice()}>\r\n                    <div className='ui-price'><span>{this.state.price}</span></div>\r\n                </div>\r\n                {this.state.show ?\r\n                    <div className=\"ui-notice\">\r\n                        <Modal.Dialog>\r\n                            <Modal.Body className='text-center'>\r\n                                <p>Chúc mừng bạn đã nhận được {this.state.price} từ bao lì xì</p>\r\n                                <Image src={require('../Images/happy-' + this.state.gallery + '.gif')} height={300} alt=\"happy-gif\" />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button className='ui-close-btn' bsStyle=\"danger\" onClick={() => this.handleClose()}>Đóng</Button>\r\n                            </Modal.Footer>\r\n                        </Modal.Dialog>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        \r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport {Image} from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom'\nimport Envelope from './Component/Envelope';\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n      <div className='ui-layout'>\n      <div className='ui-logo text-center'>\n      <Image src={require('./Images/firework.gif') } className='firework'/>\n      <Image src={require('./Images/firework.gif') } className='firework right'/>\n      </div>\n        <div className='ui-title text-center pt-5 mb-5'>\n           <h2>CHÚC MỪNG NĂM MỚI</h2>\n           <h3>Bao Lì Xì May Mắn</h3>\n        </div>\n        <div className='ui-content'>\n        <div className='container'>\n        <div className='row'>\n          <Envelope/>\n          <Envelope/>\n          <Envelope/>\n          <Envelope/>\n          <Envelope/>\n          <Envelope/>\n          <Envelope/>\n          <Envelope/>\n        </div>\n        </div>\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/firework.e6ae4033.gif\";"],"sourceRoot":""}